{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","api/api.utils.js","api/api.localStorage.js","components/CustomRecC/CustomButton/CustomButton.js","components/CustomRecC/CustomCard/CustomCard.js","Layout/Home/Home.js","components/CustomRecC/AlertMessage/AlertMessage.js","components/CustomRecC/CustomForm/CustomForm.js","components/BreadCrump/BreadCrump.js","Layout/EditDeck/EditDeck.js","Layout/StudyDeck/StudyDeck.js","Layout/CreateDeck/CreateDeck.js","Layout/ViewDeck/ViewDeck.js","Layout/CreateCard/CreateCard.js","Layout/EditCard/EditCard.js","components/NotFound/NotFound.js","Layout/index.js","App.js","index.js"],"names":["Header","to","className","Footer","currentYear","Date","getFullYear","checkIfDeckExist","deckId","decks","JSON","parse","localStorage","getItem","currentDeckIndex","map","item","id","indexOf","deck","index","err","Error","checkIfCardExist","cardId","currentDeck","find","cards","currentCardIndex","card","deckIndex","getDecks","getDeck","getCard","CustomButton","title","kind","size","purpose","onClickHandler","refreshHandler","changeCardPositionHandler","nextCardHandler","type","history","useHistory","useParams","icons","add","delete","view","study","flip","edit","next","cancel","handlers","deleteDeckHandler","window","confirm","splice","setItem","stringify","deleteDeck","push","studyDeckHandler","flipCardHandler","createDeckHandler","cancelFormHandler","goBack","viewDeckHandler","editDeckHandler","addCardsHandler","deleteCardHandler","currentCard","deleteCard","editCardHandler","renderButton","form","onClick","ordinary","CustomCard","text_1","text_2","quantity","allowNewCard","currentPosition","editDeck","selectType","length","substring","Home","useState","setDecks","refresh","setRefresh","useEffect","abortController","AbortController","a","response","abort","renderDecks","description","name","AlertMessage","message","errorType","CustomForm","input_1","input_2","submitFormHandler","displayAlert","setDisplayAlert","initialFormState","formData","setFormData","handleChange","target","value","handleSubmit","e","preventDefault","undefined","formType","onSubmit","placeholder","onChange","maxLength","rows","BreadCrump","deckName","urlTo","pathnames","create_deck","view_deck","edit_deck","add_card","edit_card","urlLink","EditDeck","setDeck","readDeck","console","log","renderDeckState","render","deckInfo","updatedDeck","loading","StudyDeck","allCards","setAllCards","setCurrentCard","setCurrentPosition","setAllowNewCard","deckDisplay","front","back","notEnoughCards","CreateDeck","nanoid","createDeck","ViewDeck","retrieveDeck","getAllCards","CreateCard","renderFormState","cardInfo","newCard","createCard","EditCard","setCard","readCard","updatedCard","editCard","NotFound","Layout","exact","path","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"ygBAgBeA,MAZf,WACE,OACE,iCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAKC,UAAU,iBAAf,SACE,yDCIKC,G,MAVA,WACb,IAAMC,GAAc,IAAIC,MAAOC,cAE/B,OACE,iCACE,iDAAiBF,EAAjB,qB,4GCROG,EAAmB,SAACC,GAC/B,IACE,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UACxCC,EAAmBL,EAAMM,KAAI,SAACC,GAAD,OAAUA,EAAKC,MAAIC,QAAQV,GAE9D,IAA0B,IAAtBM,EACF,MAAO,CAAEK,KAAMV,EAAMK,GAAmBM,MAAON,GAEjD,MAAOO,GACP,MAAM,IAAIC,MAAM,6DAIPC,EAAmB,SAACC,GAC/B,IACE,IACMC,EADQf,KAAKC,MAAMC,aAAaC,QAAQ,UACpBa,MAAK,SAACP,GAAD,OAC7BA,EAAKQ,MAAMD,MAAK,SAACV,GAAD,OAAUA,EAAKC,KAAOO,QAElCV,EAAmBP,EAAiBkB,EAAYR,IAChDW,EAAmBH,EAAYE,MAClCZ,KAAI,SAACC,GAAD,OAAUA,EAAKC,MACnBC,QAAQM,GAEX,IAA0B,IAAtBI,EACF,MAAO,CACLC,KAAMJ,EAAYE,MAAMC,GACxBR,MAAOQ,EACPpB,OAAQiB,EAAYR,GACpBa,UAAWhB,EAAiBM,OAGhC,MAAOC,GACP,MAAM,IAAIC,MAAM,6DC7BPS,EAAW,WACtB,IAGE,OADcrB,KAAKC,MAAMC,aAAaC,QAAQ,UAE9C,MAAOQ,GACP,MAAM,IAAIC,MAAM,sBAIPU,EAAU,SAACxB,GACtB,IACE,OAAOD,EAAiBC,GAAQW,KAChC,MAAOE,GACP,MAAM,IAAIC,MAAM,sBAyDPW,EAAU,SAACzB,EAAQgB,GAC9B,IAEE,OADoBD,EAAiBf,GAClBqB,KACnB,MAAOR,GACP,MAAM,IAAIC,MAAM,wBC4BLY,EAhGM,SAAC,GAWf,IAVLjB,EAUI,EAVJA,GACAkB,EASI,EATJA,MACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,QACAC,EAKI,EALJA,eACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,0BACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,KAEMC,EAAUC,uBACRrC,EAAWsC,sBAAXtC,OAEFuC,EAAQ,CACZC,IAAK,cAAC,IAAD,IACLC,OAAQ,cAAC,IAAD,IACRC,KAAM,cAAC,IAAD,IACNC,MAAO,cAAC,IAAD,IACPC,KAAM,cAAC,IAAD,IACNC,KAAM,cAAC,IAAD,IACNC,KAAM,cAAC,IAAD,IACNC,OAAQ,cAAC,IAAD,KAGJC,EAAW,CACfC,kBAAmB,WACbC,OAAOC,QAAQ,iDD0BC,SAACnD,GACzB,IAAMiB,EAAclB,EAAiBC,GAC/BC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC9CJ,EAAMmD,OAAOnC,EAAYL,MAAO,GAChCR,aAAaiD,QAAQ,QAASnD,KAAKoD,UAAUrD,IC7BvCsD,CAAW9C,GACXuB,EAAiBA,IAAmBI,EAAQoB,KAAR,OAGxCC,iBAAkB,WAChBrB,EAAQoB,KAAR,iBAAuB/C,EAAvB,YAEFiD,gBAAiB,WACfzB,KAEFC,gBAAiB,WACfA,KAEFyB,kBAAmB,WACjBvB,EAAQoB,KAAR,eAEFI,kBAAmB,WACjBxB,EAAQyB,UAEVC,gBAAiB,WACf1B,EAAQoB,KAAR,iBAAuB/C,KAEzBsD,gBAAiB,WACf3B,EAAQoB,KAAR,iBAAuB/C,EAAvB,WAEFuD,gBAAiB,WACf5B,EAAQoB,KAAR,iBAAuB/C,EAAvB,gBAEFwD,kBAAmB,WAEff,OAAOC,QACL,8DDoDgB,SAACnC,GACzB,IACE,IAAMkD,EAAcnD,EAAiBC,GAC/Bf,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAE9CJ,EAAMiE,EAAY5C,WAAWH,MAAMiC,OAAOc,EAAYtD,MAAO,GAE7DR,aAAaiD,QAAQ,QAASnD,KAAKoD,UAAUrD,IAC7C,MAAOY,GACP,MAAM,IAAIC,MAAM,6BC1DZqD,CAAW1D,GACXuB,MAGJoC,gBAAiB,WACfhC,EAAQoB,KAAR,iBAAuBxD,EAAvB,kBAAuCS,EAAvC,YAGE4D,EAAe,CACnBC,KACE,yBACE5E,UAAS,oBAAekC,EAAf,YAAuBC,GAChC0C,QAASvB,EAASjB,GAClBI,KAAMA,EAHR,UAKGI,EAAMT,GACNH,KAGL6C,SACE,yBACE9E,UAAS,oBAAekC,EAAf,YAAuBC,GAChC0C,QAASvB,EAASjB,GAFpB,UAIGQ,EAAMT,GACNH,MAKP,OAAOQ,EAAOkC,EAAaC,KAAOD,EAAaG,UCqElCC,G,MAzKI,SAAC,GAab,IAZLhE,EAYI,EAZJA,GACAiE,EAWI,EAXJA,OACAC,EAUI,EAVJA,OACAxC,EASI,EATJA,KACAyC,EAQI,EARJA,SACAV,EAOI,EAPJA,YACAlC,EAMI,EANJA,eACA6C,EAKI,EALJA,aACA5C,EAII,EAJJA,0BACA6C,EAGI,EAHJA,gBACA5C,EAEI,EAFJA,gBACA6C,EACI,EADJA,SAEMC,EAAa,CACjBrE,KACE,qCACE,sBAAKjB,UAAU,sBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,+BACE,4CACO,OAANgF,QAAM,IAANA,OAAA,EAAAA,EAAQO,QAAS,GAAjB,iBAAyBP,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAQQ,UAAU,EAAG,IAA9C,OAAyDR,KAE5D,8BACE,8CACCE,EAAU,IACVA,EAAW,GAA2B,IAAbA,EAAV,QAAqC,aAGzD,8BACE,kDACO,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQM,QAAS,IAAjB,iBAA0BN,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAQO,UAAU,EAAG,KAA/C,OAA2DP,QAGhE,sBAAKjF,UAAU,wBAAf,UACE,sBAAKA,UAAU,sBAAf,UACGqF,EACC,cAAC,EAAD,CACEtE,GAAIA,EACJkB,MAAM,OACNC,KAAK,UACLC,KAAK,QACLC,QAAQ,OACRC,eAAe,oBAGjB,cAAC,EAAD,CACEtB,GAAIA,EACJkB,MAAM,OACNC,KAAK,UACLC,KAAK,QACLC,QAAQ,OACRC,eAAe,oBAGnB,cAAC,EAAD,CACEtB,GAAIA,EACJkB,MAAM,QACNC,KAAK,SACLC,KAAK,QACLC,QAAQ,QACRC,eAAe,wBAGnB,sBAAKrC,UAAU,sBAAf,UACGqF,GACC,cAAC,EAAD,CACEtE,GAAIA,EACJkB,MAAM,YACNC,KAAK,SACLC,KAAK,QACLC,QAAQ,MACRC,eAAe,oBAGnB,cAAC,EAAD,CACEtB,GAAIA,EACJkB,MAAM,SACNC,KAAK,SACLC,KAAK,QACLC,QAAQ,SACRC,eAAe,oBACfC,eAAgBA,aAM1BW,MACE,qCACE,sBAAKjD,UAAU,sBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,6BACGkF,EAAW,EAAX,eACWV,EADX,gBAC8BU,GAC3B,cAELE,EAAkB,uCAAiB,yCAEtC,4BAAIH,OAEN,qBAAKjF,UAAU,wBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,cAAC,EAAD,CACEiC,MAAM,OACNC,KAAK,SACLC,KAAK,QACLC,QAAQ,OACRC,eAAe,kBACfE,0BAA2BA,IAE5B4C,GACC,cAAC,EAAD,CACElD,MAAM,OACNC,KAAK,UACLC,KAAK,QACLC,QAAQ,OACRC,eAAe,kBACfG,gBAAiBA,YAO7BW,KACE,qCACE,qBAAKnD,UAAU,sBAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,8BACE,2CADF,OAEGgF,QAFH,IAEGA,OAFH,EAEGA,EAAQQ,UAAU,EAAG,IAFxB,SAIA,8BACE,0CADF,OAEGP,QAFH,IAEGA,OAFH,EAEGA,EAAQO,UAAU,EAAG,IAFxB,cAMJ,sBAAKxF,UAAU,wBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,cAAC,EAAD,CACEe,GAAIA,EACJkB,MAAM,OACNC,KAAK,UACLC,KAAK,QACLC,QAAQ,OACRC,eAAe,sBAGnB,qBAAKrC,UAAU,sBAAf,SACE,cAAC,EAAD,CACEe,GAAIA,EACJkB,MAAM,SACNC,KAAK,SACLC,KAAK,QACLC,QAAQ,SACRC,eAAe,oBACfC,eAAgBA,aAQ5B,OAAO,qBAAKtC,UAAU,iBAAf,SAAiCsF,EAAW7C,OCrGtCgD,EA/DF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOnF,EAAP,KAAcoF,EAAd,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EAAkB,IAAIC,gBAEtBlE,EAAO,uCAAG,4BAAAmE,EAAA,+EAESpE,IAFT,OAGZqE,GADIA,EAFQ,QAGUA,EAASrF,KAAI,SAACC,GAAD,OAAUA,KAAQ,GAErD6E,EAASO,GACTL,GAAW,GANC,oHAAH,qDAab,OAFA/D,IAEO,kBAAMiE,EAAgBI,WAC5B,CAACP,IAEJ,IAAMtD,EAAiB,WACrBuD,GAAW,IAGPO,EAAc7F,EAAMM,KAAI,SAACC,GAC7B,IAAQC,EAAiCD,EAAjCC,GAAIU,EAA6BX,EAA7BW,MAAO4E,EAAsBvF,EAAtBuF,YAAaC,EAASxF,EAATwF,KAEhC,OACE,qBAAKtG,UAAU,YAAf,SACE,cAAC,EAAD,CACEe,GAAIA,EACJiE,OAAQsB,EACRrB,OAAQoB,EACR5D,KAAK,OACLyC,SAAUzD,EAAM8D,OAChBjD,eAAgBA,KAPYvB,MAYpC,OACE,qCACE,cAAC,EAAD,CACEkB,MAAM,cACNC,KAAK,SACLC,KAAK,MACLC,QAAQ,MACRC,eAAe,sBAEjB,qBAAKrC,UAAU,cAAf,SACIO,EAAMgF,OAGNa,EAFA,2E,wBClDKG,G,YARM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAAyB,EAAhBC,UAC/B,OACE,qBAAKzG,UAAU,gBAAf,SACE,6BAAKwG,QCmIIE,EAnII,SAAC,GAA0D,IAAxDjE,EAAuD,EAAvDA,KAAMR,EAAiD,EAAjDA,MAAO0E,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,kBACnD,EAAwCnB,oBAAS,GAAjD,mBAAOoB,EAAP,KAAqBC,EAArB,KACMC,EAAmB,CACvBhC,OAAQ2B,GAAoB,GAC5B1B,OAAQ2B,GAAoB,IAE9B,EAAgClB,mBAAS,eAAKsB,IAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBF,EAAY,2BACPD,GADM,kBAERG,EAAOd,KAAOc,EAAOC,UAIpBC,EAAe,SAACC,GACpBA,EAAEC,kBAEsB,KAApBP,EAASjC,QACW,OAApBiC,EAASjC,aACWyC,IAApBR,EAASjC,SACA,SAATvC,IACoB,KAApBwE,EAASjC,QACW,OAApBiC,EAASjC,aACWyC,IAApBR,EAASjC,QACW,KAApBiC,EAAShC,QACW,OAApBgC,EAAShC,aACWwC,IAApBR,EAAShC,SACA,SAATxC,EAEFsE,GAAgB,IAEhBF,EAAkBI,GAClBC,EAAY,eAAKF,IACjBD,GAAgB,KAIdW,EAAW,CACfzG,KACE,qCACG6F,GAAgB,cAAC,EAAD,CAAcN,QAAQ,gCACvC,uBAAMmB,SAAUL,EAAhB,UACE,0CACA,uBACE7E,KAAK,OACL6D,KAAK,SACLsB,YAAY,YACZP,MAAOJ,EAASjC,OAChB6C,SAAUV,EACVW,UAAW,KAEb,kDACA,0BACExB,KAAK,SACLsB,YAAY,mBACZG,KAAK,KACLV,MAAOJ,EAAShC,OAChB4C,SAAUV,EACVW,UAAW,MAEb,sBAAK9H,UAAU,oBAAf,UACE,cAAC,EAAD,CACEiC,MAAM,SACNE,KAAK,QACLD,KAAK,SACLE,QAAQ,SACRC,eAAe,oBACfI,KAAK,WAEP,cAAC,EAAD,CACER,MAAM,SACNE,KAAK,QACLD,KAAK,UACLO,KAAK,SACLL,QAAQ,iBAMlBT,KACE,qCACGmF,GAAgB,cAAC,EAAD,CAAcN,QAAQ,6BACvC,uBAAMmB,SAAUL,EAAhB,UACE,2CACA,0BACEhB,KAAK,SACLsB,YAAY,oBACZG,KAAK,IACLV,MAAOJ,EAASjC,OAChB6C,SAAUV,IAEZ,2CACA,0BACEb,KAAK,SACLsB,YAAY,qBACZG,KAAK,IACLV,MAAOJ,EAAShC,OAChB4C,SAAUV,IAEZ,sBAAKnH,UAAU,oBAAf,UACE,cAAC,EAAD,CACEiC,MAAM,SACNE,KAAK,QACLD,KAAK,SACLE,QAAQ,SACRK,KAAK,SACLJ,eAAe,sBAEjB,cAAC,EAAD,CACEJ,MAAM,OACNE,KAAK,QACLD,KAAK,UACLO,KAAK,SACLL,QAAQ,kBAQpB,OACE,sBAAKpC,UAAU,wBAAf,UACE,6BAAKiC,IACJyF,EAASjF,OCxFDuF,G,MAxCI,SAAC,GAA8C,IAA5C1H,EAA2C,EAA3CA,OAAQ2H,EAAmC,EAAnCA,SAAmC,KAAzB3G,OAAyB,EAAjB4G,cAAiB,MAAT,GAAS,EACzDC,EAAY,CAChBlH,KAAM,CAAC,CAACgH,EAAU,SAAU,CAAC,UAAD,OAAW3H,KACvC8H,YAAa,CAAC,CAAC,eAAgB,CAAC,eAChCC,UAAW,CAAC,CAACJ,GAAW,CAAC,UAAD,OAAW3H,KACnCgI,UAAW,CAAC,CAACL,EAAU,aAAc,CAAC,UAAD,OAAW3H,KAChDiI,SAAU,CAAC,CAACN,EAAU,YAAa,CAAC,UAAD,OAAW3H,KAC9CkI,UAAW,CAAC,CAACP,EAAD,aAAyB,CAAC,UAAD,OAAW3H,MAGlD,OACE,0BAASN,UAAS,uBAAlB,UACE,cAAC,IAAD,CAAMD,GAAG,IAAT,SACE,wCAEF,qCACCoI,EAAUD,GAAO,GAAGrH,KAAI,SAACoB,EAAOf,GAC/B,IAAMuH,EAAUN,EAAUD,GAAO,GAAGhH,GAEpC,OADeA,IAAUiH,EAAUD,GAAO,GAAG3C,OAAS,EAEpD,8BACE,8BACQ,OAALtD,QAAK,IAALA,OAAA,EAAAA,EAAOsD,QAAS,GAAhB,iBAAwBtD,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOuD,UAAU,EAAG,IAA5C,OAAuDvD,KAFlDf,GAMV,gCACE,cAAC,IAAD,CAAMnB,GAAI0I,EAAV,SACE,8BACQ,OAALxG,QAAK,IAALA,OAAA,EAAAA,EAAOsD,QAAS,GAAhB,iBAAwBtD,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOuD,UAAU,EAAG,IAA5C,OAAuDvD,MAG5D,uCANQf,WCyBLwH,EA9CE,WACf,IAAQpI,EAAWsC,sBAAXtC,OACFoC,EAAUC,uBAChB,EAAwB+C,mBAAS,IAAjC,mBAAOzE,EAAP,KAAa0H,EAAb,KAEA7C,qBAAU,WACR,IAAMhE,EAAO,uCAAG,4BAAAmE,EAAA,+EAEW2C,EAAStI,GAFpB,OAEN4F,EAFM,OAGZ2C,QAAQC,IAAI,SAAU5C,GACtByC,EAAQzC,GAJI,oHAAH,qDASbpE,MACC,CAACxB,IAEJ,IASMyI,EAAkB,CACtBC,OACE,qCACE,cAAC,EAAD,CAAYd,MAAM,YAAYD,SAAUhH,EAAKqF,KAAMhG,OAAQW,EAAKF,KAChE,cAAC,EAAD,CACE0B,KAAK,OACLR,MAAM,aACN0E,QAAS1F,EAAKqF,KACdM,QAAS3F,EAAKoF,YACdQ,kBAlBkB,SAACjC,IPqBL,SAACqE,GACvB,IACE,IAAQlI,EAA0BkI,EAA1BlI,GAAIuF,EAAsB2C,EAAtB3C,KAAMD,EAAgB4C,EAAhB5C,YACZ9F,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UACxCY,EAAclB,EAAiBU,GAC/BmI,EAAc,CAClBnI,GAAIA,EACJuF,KAAMA,EACND,YAAaA,EACb5E,MAAOF,EAAYN,KAAKQ,OAE1BlB,EAAMgB,EAAYL,OAASgI,EAC3BxI,aAAaiD,QAAQ,QAASnD,KAAKoD,UAAUrD,IAC7C,MAAOY,GACP,MAAM,IAAIC,MAAM,qBO7BhBiE,CALiB,CACftE,GAAIT,EACJgG,KAAM1B,EAAKI,OACXqB,YAAazB,EAAKK,SAGpBvC,EAAQyB,eAeRgF,QAAS,6CAGX,OAAOlI,EAAKqF,KAAOyC,EAAgBC,OAASD,EAAgBI,SCkD/CC,G,MA5FG,WAAO,IAAD,MACd9I,EAAWsC,sBAAXtC,OACR,EAAwBoF,mBAAS,IAAjC,mBAAOzE,EAAP,KAAa0H,EAAb,KACA,EAAgCjD,mBAAS,IAAzC,mBAAO2D,EAAP,KAAiBC,EAAjB,KACA,EAAsC5D,mBAAS,IAA/C,mBAAOlB,EAAP,KAAoB+E,EAApB,KACA,EAA8C7D,oBAAS,GAAvD,mBAAON,EAAP,KAAwBoE,EAAxB,KACA,EAAwC9D,oBAAS,GAAjD,mBAAOP,EAAP,KAAqBsE,EAArB,KAEM/G,EAAUC,uBAEhBmD,qBAAU,WACR,IAAMhE,EAAO,uCAAG,4BAAAmE,EAAA,+EAEW2C,EAAStI,GAFpB,OAEN4F,EAFM,OAGZyC,EAAQzC,GACRoD,EAAYpD,EAASzE,OACrB8H,EAAerD,EAASzE,MAAM,IALlB,oHAAH,qDAUbK,MACC,CAACxB,IAEJ,IAiBMoJ,EAAc,CAClBV,OACE,qCACE,cAAC,EAAD,CAAYd,MAAM,OAAOD,SAAUhH,EAAKqF,KAAMhG,OAAQW,EAAKF,KAC3D,qBAAIf,UAAU,aAAd,UAA4BiB,EAAKqF,KAAjC,aACA,cAAC,EAAD,CACEvF,GAAIT,EACJmC,KAAK,QACLwC,OAAQG,EAAe,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAamF,MAAhB,OAAwBnF,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAaoF,KAC5D1E,SAAQ,OAAEjE,QAAF,IAAEA,GAAF,UAAEA,EAAMQ,aAAR,aAAE,EAAa8D,OACvBJ,aAAcA,EACdX,YAAa6E,EAASrI,QAAQwD,GAAe,EAC7CjC,0BA7B0B,WAChCiH,GAAoBpE,GACpBqE,GAAgB,IA4BVrE,gBAAiBA,EACjB5C,gBA1BgB,WACtB,IAAId,EAAmB2H,EAASrI,QAAQwD,GACpC9C,IAAqB2H,EAAS9D,OAAS,IACrC/B,OAAOC,QAAQ,kBACjB/B,GAAoB,EAEpBgB,EAAQoB,KAAK,MAGjByF,EAAeF,EAAS3H,EAAmB,UAqB3CyH,QACE,qCACE,cAAC,EAAD,CAAYjB,MAAM,OAAOD,SAAUhH,EAAKqF,KAAMhG,OAAQW,EAAKF,KAC3D,oBAAIf,UAAU,aAAd,2BAGJ6J,eACE,qCACE,cAAC,EAAD,CAAY3B,MAAM,OAAOD,SAAUhH,EAAKqF,KAAMhG,OAAQW,EAAKF,KAE3D,sBAAKf,UAAU,sBAAf,UACE,qBAAIA,UAAU,aAAd,UAA4BiB,EAAKqF,KAAjC,aACA,mDACA,sFACiDrF,QADjD,IACiDA,GADjD,UACiDA,EAAMQ,aADvD,aACiD,EAAa8D,OAAQ,IADtE,wBAIA,cAAC,EAAD,CACEtD,MAAM,YACNC,KAAK,SACLC,KAAK,SACLC,QAAQ,MACRC,eAAe,kBACftB,GAAIT,WAOd,OAAW,OAAJW,QAAI,IAAJA,GAAA,UAAAA,EAAMQ,aAAN,SAAa8D,OAASmE,EAAYV,OAASU,EAAYG,iB,gBCtEjDC,EArBI,WACjB,IAAMpH,EAAUC,uBAQhB,OACE,gCACE,cAAC,EAAD,CAAYuF,MAAM,gBAClB,cAAC,EAAD,CACEzF,KAAK,OACLR,MAAM,cACN4E,kBAZoB,SAACjC,ITWH,SAACqE,GACzB,IACE,IAAQ3C,EAAsB2C,EAAtB3C,KAAMD,EAAgB4C,EAAhB5C,YACR9F,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAEhC,OAAVJ,EACFG,aAAaiD,QACX,QACAnD,KAAKoD,UAAL,sBACKrD,GADL,CAEE,CAAEQ,GAAIgJ,cAAUzD,KAAMA,EAAMD,YAAaA,EAAa5E,MAAO,QAIjEf,aAAaiD,QACX,QACAnD,KAAKoD,UAAU,CACb,CAAE7C,GAAIgJ,cAAUzD,KAAMA,EAAMD,YAAaA,EAAa5E,MAAO,OAInE,MAAON,GACP,MAAM,IAAIC,MAAM,qBS/BhB4I,CADiB,CAAE1D,KAAM1B,EAAKI,OAAQqB,YAAazB,EAAKK,SAExDvC,EAAQoB,KAAK,YC6DFmG,G,MAnEE,WAAO,IAAD,MACrB,EAAwBvE,mBAAS,IAAjC,mBAAOzE,EAAP,KAAa0H,EAAb,KACA,EAA8BjD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACQvF,EAAWsC,sBAAXtC,OAERwF,qBAAU,WACR,IAAIzC,GAAS,EACPvB,EAAO,uCAAG,4BAAAmE,EAAA,+EAEWiE,EAAa5J,GAFxB,UAEN4F,EAFM,QAIR7C,EAJQ,iDAKZsF,EAAQzC,GACRL,GAAW,GANC,uHAAH,qDAYb,OADA/D,IACO,WACLuB,GAAS,KAEV,CAACuC,EAAStF,IAEb,IAAMgC,EAAiB,WACrBuD,GAAW,IAGPsE,EAAW,OAAGlJ,QAAH,IAAGA,GAAH,UAAGA,EAAMQ,aAAT,aAAG,EAAaZ,KAAI,SAACC,GACpC,OACE,qBAAKd,UAAU,YAAf,SACE,cAAC,EAAD,CACEe,GAAID,EAAKC,GACTiE,OAAQlE,EAAK6I,MACb1E,OAAQnE,EAAK8I,KACbnH,KAAK,OACLH,eAAgBA,KANYxB,EAAKC,OAYzC,OACE,sBAAKf,UAAU,YAAf,UACE,cAAC,EAAD,CAAYkI,MAAM,YAAYD,SAAUhH,EAAKqF,KAAMhG,OAAQW,EAAKF,KAChE,wCACA,cAAC,EAAD,CACEA,GAAIE,EAAKF,GACTiE,OAAQ/D,EAAKqF,KACbrB,OAAQhE,EAAKoF,YACb5D,KAAK,OACLyC,SAAQ,OAAEjE,QAAF,IAAEA,GAAF,UAAEA,EAAMQ,aAAR,aAAE,EAAa8D,OACvBF,UAAU,IAGP,OAAJpE,QAAI,IAAJA,GAAA,UAAAA,EAAMQ,aAAN,SAAa8D,OACZ,yCAEA,4DAEF,yBAASvF,UAAU,sBAAnB,SACE,sBAAKA,UAAU,kBAAf,cAAmCmK,YCtB5BC,EAxCI,WACjB,MAAwB1E,mBAAS,IAAjC,mBAAOzE,EAAP,KAAa0H,EAAb,KACQrI,EAAWsC,sBAAXtC,OACFoC,EAAUC,uBAEhBmD,qBAAU,WACR,IAAMhE,EAAO,uCAAG,4BAAAmE,EAAA,+EAEW2C,EAAStI,GAFpB,OAEN4F,EAFM,OAGZyC,EAAQzC,GAHI,oHAAH,qDAQbpE,MACC,CAACxB,IAEJ,IAMM+J,EAAkB,CACtBrB,OACE,qCACE,cAAC,EAAD,CAAYd,MAAM,WAAWD,SAAUhH,EAAKqF,KAAMhG,OAAQW,EAAKF,KAC/D,cAAC,EAAD,CACE0B,KAAK,OACLR,MAAK,UAAKhB,EAAKqF,KAAV,cACLO,kBAbkB,SAACjC,IX4DH,SAACtE,EAAQgK,GACjC,IACE,IAAQX,EAAgBW,EAAhBX,MAAOC,EAASU,EAATV,KACTrJ,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAC1CY,EAAclB,EAAiBC,GAC7BiK,EAAU,CACdxJ,GAAIgJ,cACJJ,MAAOA,EACPC,KAAMA,GAERf,QAAQC,IAAI,YAAawB,GAEzB/I,EAAYN,KAAKQ,MAAMqC,KAAKyG,GAC5B1B,QAAQC,IAAI,oBAAqBvH,EAAYN,MAC7CV,EAAMgB,EAAYL,OAASK,EAAYN,KACvCP,aAAaiD,QAAQ,QAASnD,KAAKoD,UAAUrD,IAC7C,MAAOY,GACP,MAAM,IAAIC,MAAM,6BW5EhBoJ,CAAWvJ,EAAKF,GAAI,CAAE4I,MAAO/E,EAAKI,OAAQ4E,KAAMhF,EAAKK,SAErDhE,EAAKF,IAAM2B,EAAQyB,eAcnBgF,QAAS,6CAGX,OAAOlI,EAAKqF,KAAO+D,EAAgBrB,OAASqB,EAAgBlB,SC+B/CsB,EAhEE,WACf,MAAwB/E,mBAAS,IAAjC,mBAAOzE,EAAP,KAAa0H,EAAb,KACA,EAAwBjD,mBAAS,IAAjC,mBAAO/D,EAAP,KAAa+I,EAAb,KACA,EAA2B9H,sBAAnBtC,EAAR,EAAQA,OAAQgB,EAAhB,EAAgBA,OACVoB,EAAUC,uBAEhBmD,qBAAU,WACR,IAAMhE,EAAO,uCAAG,4BAAAmE,EAAA,+EAEW2C,EAAStI,GAFpB,OAEN4F,EAFM,OAGZyC,EAAQzC,GAHI,oHAAH,qDAQbpE,MACC,CAACxB,IAEJwF,qBAAU,WACR,IAAM/D,EAAO,uCAAG,4BAAAkE,EAAA,+EAEW0E,EAASrJ,GAFpB,OAEN4E,EAFM,OAGZwE,EAAQxE,GAHI,oHAAH,qDAQbnE,MACC,CAACT,IAEJ,IASM+I,EAAkB,CACtBrB,OACE,qCACE,cAAC,EAAD,CACEd,MAAM,YACND,SAAUhH,EAAKqF,KACfhG,OAAQW,EAAKF,GACbO,OAAQK,EAAKZ,KAGf,cAAC,EAAD,CACEkB,MAAM,aACNQ,KAAK,OACLkE,QAAShF,EAAKgI,MACd/C,QAASjF,EAAKiI,KACd/C,kBAxBkB,SAACjC,IZgEL,SAAC0F,GACvB,IACE,IAAQvJ,EAAoBuJ,EAApBvJ,GAAI4I,EAAgBW,EAAhBX,MAAOC,EAASU,EAATV,KACbrJ,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UACxC6D,EAAcnD,EAAiBN,GAC/BQ,EAAclB,EAAiBmE,EAAYlE,QAC3CsK,EAAc,CAClB7J,GAAIA,EACJ4I,MAAOA,EACPC,KAAMA,GAERrI,EAAYN,KAAKQ,MAAM+C,EAAYtD,OAAS0J,EAC5CrK,EAAMgB,EAAYL,OAASK,EAAYN,KACvCP,aAAaiD,QAAQ,QAASnD,KAAKoD,UAAUrD,IAC7C,MAAOY,GACP,MAAM,IAAIC,MAAM,2BY9EhByJ,CAAS,CACP9J,GAAIY,EAAKZ,GACT4I,MAAO/E,EAAKI,OACZ4E,KAAMhF,EAAKK,SAEbvC,EAAQyB,eAsBRgF,QAAS,6CAGX,OAAOxH,EAAKZ,GAAKsJ,EAAgBrB,OAASqB,EAAgBlB,S,MC7D7C2B,MARf,WACE,OACE,qBAAK9K,UAAU,WAAf,SACE,8CC+CS+K,MArCf,WACE,OACE,sBAAK/K,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,qBAAf,SACE,eAAC,SAAD,WACE,cAAC,QAAD,CAAOgL,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOD,OAAK,EAACC,KAAK,uBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOD,OAAK,EAACC,KAAK,sBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOD,OAAK,EAACC,KAAK,2BAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOD,OAAK,EAACC,KAAK,oCAAlB,SACE,cAAC,EAAD,MAEF,cAAC,QAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,WAIN,cAAC,EAAD,Q,MC3BSC,MAZf,WACE,OACE,qBAAKlL,UAAU,aAAf,SACE,cAAC,SAAD,UACE,cAAC,QAAD,CAAOiL,KAAK,IAAZ,SACE,cAAC,EAAD,WCTVE,IAASnC,OACP,cAAC,IAAMoC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.5b08b202.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <header>\n      <Link to=\"/\">\n        <div className=\"text-container\">\n          <h1>FlashCard_Simple</h1>\n        </div>\n      </Link>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  return (\r\n    <footer>\r\n      <h4>Copyright © {currentYear} Harrys.one</h4>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const checkIfDeckExist = (deckId) => {\r\n  try {\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n    const currentDeckIndex = decks.map((item) => item.id).indexOf(deckId);\r\n\r\n    if (currentDeckIndex !== -1) {\r\n      return { deck: decks[currentDeckIndex], index: currentDeckIndex };\r\n    }\r\n  } catch (err) {\r\n    throw new Error(\"Something spicy is going on, no eggs for easter fella!!\");\r\n  }\r\n};\r\n\r\nexport const checkIfCardExist = (cardId) => {\r\n  try {\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n    const currentDeck = decks.find((deck) =>\r\n      deck.cards.find((item) => item.id === cardId)\r\n    );\r\n    const currentDeckIndex = checkIfDeckExist(currentDeck.id);\r\n    const currentCardIndex = currentDeck.cards\r\n      .map((item) => item.id)\r\n      .indexOf(cardId);\r\n\r\n    if (currentCardIndex !== -1) {\r\n      return {\r\n        card: currentDeck.cards[currentCardIndex],\r\n        index: currentCardIndex,\r\n        deckId: currentDeck.id,\r\n        deckIndex: currentDeckIndex.index,\r\n      };\r\n    }\r\n  } catch (err) {\r\n    throw new Error(\"Something spicy is going on, no eggs for easter fella!!\");\r\n  }\r\n};\r\n","import { nanoid } from \"nanoid\";\r\nimport { checkIfDeckExist, checkIfCardExist } from \"./api.utils\";\r\n\r\n// DECKS API\r\nexport const getDecks = () => {\r\n  try {\r\n    //localStorage.clear();\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n    return decks;\r\n  } catch (err) {\r\n    throw new Error(\"Cannot get decks\");\r\n  }\r\n};\r\n\r\nexport const getDeck = (deckId) => {\r\n  try {\r\n    return checkIfDeckExist(deckId).deck;\r\n  } catch (err) {\r\n    throw new Error(\"Cannot get decks\");\r\n  }\r\n};\r\n\r\nexport const createDeck = (deckInfo) => {\r\n  try {\r\n    const { name, description } = deckInfo;\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n\r\n    if (decks !== null) {\r\n      localStorage.setItem(\r\n        \"decks\",\r\n        JSON.stringify([\r\n          ...decks,\r\n          { id: nanoid(), name: name, description: description, cards: [] },\r\n        ])\r\n      );\r\n    } else {\r\n      localStorage.setItem(\r\n        \"decks\",\r\n        JSON.stringify([\r\n          { id: nanoid(), name: name, description: description, cards: [] },\r\n        ])\r\n      );\r\n    }\r\n  } catch (err) {\r\n    throw new Error(\"Cant create deck\");\r\n  }\r\n};\r\n\r\nexport const editDeck = (deckInfo) => {\r\n  try {\r\n    const { id, name, description } = deckInfo;\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n    const currentDeck = checkIfDeckExist(id);\r\n    const updatedDeck = {\r\n      id: id,\r\n      name: name,\r\n      description: description,\r\n      cards: currentDeck.deck.cards,\r\n    };\r\n    decks[currentDeck.index] = updatedDeck;\r\n    localStorage.setItem(\"decks\", JSON.stringify(decks));\r\n  } catch (err) {\r\n    throw new Error(\"Cannot edit deck\");\r\n  }\r\n};\r\n\r\nexport const deleteDeck = (deckId) => {\r\n  const currentDeck = checkIfDeckExist(deckId);\r\n  const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n  decks.splice(currentDeck.index, 1);\r\n  localStorage.setItem(\"decks\", JSON.stringify(decks));\r\n};\r\n\r\n// CARDS API\r\n\r\nexport const getCard = (deckId, cardId) => {\r\n  try {\r\n    const currentCard = checkIfCardExist(deckId, cardId);\r\n    return currentCard.card;\r\n  } catch (err) {\r\n    throw new Error(\"Cannot get card :(\");\r\n  }\r\n};\r\n\r\nexport const createCard = (deckId, cardInfo) => {\r\n  try {\r\n    const { front, back } = cardInfo;\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n    let currentDeck = checkIfDeckExist(deckId);\r\n    const newCard = {\r\n      id: nanoid(),\r\n      front: front,\r\n      back: back,\r\n    };\r\n    console.log(\"card info\", cardInfo);\r\n\r\n    currentDeck.deck.cards.push(newCard);\r\n    console.log(\" currentDeck.deck\", currentDeck.deck);\r\n    decks[currentDeck.index] = currentDeck.deck;\r\n    localStorage.setItem(\"decks\", JSON.stringify(decks));\r\n  } catch (err) {\r\n    throw new Error(\"Could not create card ;(\");\r\n  }\r\n};\r\n\r\nexport const editCard = (cardInfo) => {\r\n  try {\r\n    const { id, front, back } = cardInfo;\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n    const currentCard = checkIfCardExist(id);\r\n    const currentDeck = checkIfDeckExist(currentCard.deckId);\r\n    const updatedCard = {\r\n      id: id,\r\n      front: front,\r\n      back: back,\r\n    };\r\n    currentDeck.deck.cards[currentCard.index] = updatedCard;\r\n    decks[currentDeck.index] = currentDeck.deck;\r\n    localStorage.setItem(\"decks\", JSON.stringify(decks));\r\n  } catch (err) {\r\n    throw new Error(\"Could not edit card :(\");\r\n  }\r\n};\r\n\r\nexport const deleteCard = (cardId) => {\r\n  try {\r\n    const currentCard = checkIfCardExist(cardId);\r\n    const decks = JSON.parse(localStorage.getItem(\"decks\"));\r\n\r\n    decks[currentCard.deckIndex].cards.splice(currentCard.index, 1);\r\n\r\n    localStorage.setItem(\"decks\", JSON.stringify(decks));\r\n  } catch (err) {\r\n    throw new Error(\"Could not delete card :(\");\r\n  }\r\n};\r\n","import \"./CustomButton.css\";\r\nimport React from \"react\";\r\nimport { FaRegPlusSquare } from \"react-icons/fa\";\r\nimport { RiDeleteBin2Line } from \"react-icons/ri\";\r\nimport { MdFlipCameraAndroid, MdOutlineNextPlan } from \"react-icons/md\";\r\nimport { ImEye, ImCancelCircle } from \"react-icons/im\";\r\nimport { GrEdit } from \"react-icons/gr\";\r\nimport { BiBookBookmark } from \"react-icons/bi\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport { deleteDeck, deleteCard } from \"../../../api/api.localStorage\";\r\n\r\nconst CustomButton = ({\r\n  id,\r\n  title,\r\n  kind,\r\n  size,\r\n  purpose,\r\n  onClickHandler,\r\n  refreshHandler,\r\n  changeCardPositionHandler,\r\n  nextCardHandler,\r\n  type,\r\n}) => {\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  const icons = {\r\n    add: <FaRegPlusSquare />,\r\n    delete: <RiDeleteBin2Line />,\r\n    view: <ImEye />,\r\n    study: <BiBookBookmark />,\r\n    flip: <MdFlipCameraAndroid />,\r\n    edit: <GrEdit />,\r\n    next: <MdOutlineNextPlan />,\r\n    cancel: <ImCancelCircle />,\r\n  };\r\n\r\n  const handlers = {\r\n    deleteDeckHandler: () => {\r\n      if (window.confirm(\"Are you sure you want to delete this deck?\")) {\r\n        deleteDeck(id);\r\n        refreshHandler ? refreshHandler() : history.push(`/`);\r\n      }\r\n    },\r\n    studyDeckHandler: () => {\r\n      history.push(`/decks/${id}/study`);\r\n    },\r\n    flipCardHandler: () => {\r\n      changeCardPositionHandler();\r\n    },\r\n    nextCardHandler: () => {\r\n      nextCardHandler();\r\n    },\r\n    createDeckHandler: () => {\r\n      history.push(`/decks/new`);\r\n    },\r\n    cancelFormHandler: () => {\r\n      history.goBack();\r\n    },\r\n    viewDeckHandler: () => {\r\n      history.push(`/decks/${id}`);\r\n    },\r\n    editDeckHandler: () => {\r\n      history.push(`/decks/${id}/edit`);\r\n    },\r\n    addCardsHandler: () => {\r\n      history.push(`/decks/${id}/cards/new`);\r\n    },\r\n    deleteCardHandler: () => {\r\n      if (\r\n        window.confirm(\r\n          \"Delete this card?\\n\\nYou will not be able to recover it\"\r\n        )\r\n      ) {\r\n        deleteCard(id);\r\n        refreshHandler();\r\n      }\r\n    },\r\n    editCardHandler: () => {\r\n      history.push(`/decks/${deckId}/cards/${id}/edit`);\r\n    },\r\n  };\r\n  const renderButton = {\r\n    form: (\r\n      <button\r\n        className={`container ${kind} ${size}`}\r\n        onClick={handlers[onClickHandler]}\r\n        type={type}\r\n      >\r\n        {icons[purpose]}\r\n        {title}\r\n      </button>\r\n    ),\r\n    ordinary: (\r\n      <button\r\n        className={`container ${kind} ${size}`}\r\n        onClick={handlers[onClickHandler]}\r\n      >\r\n        {icons[purpose]}\r\n        {title}\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  return type ? renderButton.form : renderButton.ordinary;\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from \"react\";\r\nimport \"./CustomCard.css\";\r\n\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\n\r\nconst CustomCard = ({\r\n  id,\r\n  text_1,\r\n  text_2,\r\n  type,\r\n  quantity,\r\n  currentCard,\r\n  refreshHandler,\r\n  allowNewCard,\r\n  changeCardPositionHandler,\r\n  currentPosition,\r\n  nextCardHandler,\r\n  editDeck,\r\n}) => {\r\n  const selectType = {\r\n    deck: (\r\n      <>\r\n        <div className=\"card-text-container\">\r\n          <div className=\"card-top-text-group\">\r\n            <h2>\r\n              <span>Title: </span>\r\n              {text_1?.length > 20 ? `${text_1?.substring(0, 20)}...` : text_1}\r\n            </h2>\r\n            <p>\r\n              <span>Quantity: </span>\r\n              {quantity}{\" \"}\r\n              {quantity > 1 ? \"cards\" : quantity === 0 ? \"cards\" : \"card\"}\r\n            </p>\r\n          </div>\r\n          <p>\r\n            <span>Description: </span>\r\n            {text_2?.length > 100 ? `${text_2?.substring(0, 100)}...` : text_2}\r\n          </p>\r\n        </div>\r\n        <div className=\"card-button-container\">\r\n          <div className=\"card-button-group-1\">\r\n            {editDeck ? (\r\n              <CustomButton\r\n                id={id}\r\n                title=\"Edit\"\r\n                kind=\"warning\"\r\n                size=\"small\"\r\n                purpose=\"edit\"\r\n                onClickHandler=\"editDeckHandler\"\r\n              />\r\n            ) : (\r\n              <CustomButton\r\n                id={id}\r\n                title=\"View\"\r\n                kind=\"warning\"\r\n                size=\"small\"\r\n                purpose=\"view\"\r\n                onClickHandler=\"viewDeckHandler\"\r\n              />\r\n            )}\r\n            <CustomButton\r\n              id={id}\r\n              title=\"Study\"\r\n              kind=\"casual\"\r\n              size=\"small\"\r\n              purpose=\"study\"\r\n              onClickHandler=\"studyDeckHandler\"\r\n            />\r\n          </div>\r\n          <div className=\"card-button-group-2\">\r\n            {editDeck && (\r\n              <CustomButton\r\n                id={id}\r\n                title=\"Add Cards\"\r\n                kind=\"casual\"\r\n                size=\"small\"\r\n                purpose=\"add\"\r\n                onClickHandler=\"addCardsHandler\"\r\n              />\r\n            )}\r\n            <CustomButton\r\n              id={id}\r\n              title=\"Delete\"\r\n              kind=\"danger\"\r\n              size=\"small\"\r\n              purpose=\"delete\"\r\n              onClickHandler=\"deleteDeckHandler\"\r\n              refreshHandler={refreshHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    ),\r\n    study: (\r\n      <>\r\n        <div className=\"card-text-container\">\r\n          <div className=\"card-top-text-group\">\r\n            <h2>\r\n              {quantity > 1\r\n                ? `Card ${currentCard}  of ${quantity}`\r\n                : \"Only card\"}\r\n            </h2>\r\n            {currentPosition ? <h3>Front</h3> : <h3>Back</h3>}\r\n          </div>\r\n          <p>{text_2}</p>\r\n        </div>\r\n        <div className=\"card-button-container\">\r\n          <div className=\"card-button-group-1\">\r\n            <CustomButton\r\n              title=\"Flip\"\r\n              kind=\"casual\"\r\n              size=\"small\"\r\n              purpose=\"flip\"\r\n              onClickHandler=\"flipCardHandler\"\r\n              changeCardPositionHandler={changeCardPositionHandler}\r\n            />\r\n            {allowNewCard && (\r\n              <CustomButton\r\n                title=\"next\"\r\n                kind=\"success\"\r\n                size=\"small\"\r\n                purpose=\"next\"\r\n                onClickHandler=\"nextCardHandler\"\r\n                nextCardHandler={nextCardHandler}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    ),\r\n    edit: (\r\n      <>\r\n        <div className=\"card-text-container\">\r\n          <div className=\"card-top-text-group\">\r\n            <p>\r\n              <span>Front: </span>\r\n              {text_1?.substring(0, 50)}...\r\n            </p>\r\n            <p>\r\n              <span>Back: </span>\r\n              {text_2?.substring(0, 50)}...\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-button-container\">\r\n          <div className=\"card-button-group-1\">\r\n            <CustomButton\r\n              id={id}\r\n              title=\"Edit\"\r\n              kind=\"warning\"\r\n              size=\"small\"\r\n              purpose=\"edit\"\r\n              onClickHandler=\"editCardHandler\"\r\n            />\r\n          </div>\r\n          <div className=\"card-button-group-2\">\r\n            <CustomButton\r\n              id={id}\r\n              title=\"Delete\"\r\n              kind=\"danger\"\r\n              size=\"small\"\r\n              purpose=\"delete\"\r\n              onClickHandler=\"deleteCardHandler\"\r\n              refreshHandler={refreshHandler}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return <div className=\"card-container\">{selectType[type]}</div>;\r\n};\r\n\r\nexport default CustomCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nimport CustomButton from \"../../components/CustomRecC/CustomButton/CustomButton\";\r\nimport CustomCard from \"../../components/CustomRecC/CustomCard/CustomCard\";\r\nimport { getDecks } from \"../../api/api.localStorage\";\r\n\r\nconst Home = () => {\r\n  const [decks, setDecks] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    const getDeck = async () => {\r\n      try {\r\n        let response = await getDecks();\r\n        response = response ? response.map((item) => item) : [];\r\n\r\n        setDecks(response);\r\n        setRefresh(false);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getDeck();\r\n\r\n    return () => abortController.abort();\r\n  }, [refresh]);\r\n\r\n  const refreshHandler = () => {\r\n    setRefresh(true);\r\n  };\r\n\r\n  const renderDecks = decks.map((item) => {\r\n    const { id, cards, description, name } = item;\r\n\r\n    return (\r\n      <div className=\"deck-unit\" key={id}>\r\n        <CustomCard\r\n          id={id}\r\n          text_1={name}\r\n          text_2={description}\r\n          type=\"deck\"\r\n          quantity={cards.length}\r\n          refreshHandler={refreshHandler}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <>\r\n      <CustomButton\r\n        title=\"Create deck\"\r\n        kind=\"casual\"\r\n        size=\"big\"\r\n        purpose=\"add\"\r\n        onClickHandler=\"createDeckHandler\"\r\n      />\r\n      <div className=\"decks-group\">\r\n        {!decks.length ? (\r\n          <h1>Make some decks to start practicing</h1>\r\n        ) : (\r\n          renderDecks\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./AlertMessage.css\";\r\n\r\nconst AlertMessage = ({ message, errorType }) => {\r\n  return (\r\n    <div className=\"alert-message\">\r\n      <h3>{message}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertMessage;\r\n","import React, { useState } from \"react\";\r\nimport \"./CustomForm.css\";\r\n\r\nimport CustomButton from \"../CustomButton/CustomButton\";\r\nimport AlertMessage from \"../AlertMessage/AlertMessage\";\r\n\r\nconst CustomForm = ({ type, title, input_1, input_2, submitFormHandler }) => {\r\n  const [displayAlert, setDisplayAlert] = useState(false);\r\n  const initialFormState = {\r\n    text_1: input_1 ? input_1 : \"\",\r\n    text_2: input_2 ? input_2 : \"\",\r\n  };\r\n  const [formData, setFormData] = useState({ ...initialFormState });\r\n\r\n  const handleChange = ({ target }) => {\r\n    setFormData({\r\n      ...formData,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      ((formData.text_1 === \"\" ||\r\n        formData.text_1 === null ||\r\n        formData.text_1 === undefined) &&\r\n        type === \"deck\") ||\r\n      ((formData.text_1 === \"\" ||\r\n        formData.text_1 === null ||\r\n        formData.text_1 === undefined ||\r\n        formData.text_2 === \"\" ||\r\n        formData.text_2 === null ||\r\n        formData.text_2 === undefined) &&\r\n        type === \"card\")\r\n    ) {\r\n      setDisplayAlert(true);\r\n    } else {\r\n      submitFormHandler(formData);\r\n      setFormData({ ...initialFormState });\r\n      setDisplayAlert(false);\r\n    }\r\n  };\r\n\r\n  const formType = {\r\n    deck: (\r\n      <>\r\n        {displayAlert && <AlertMessage message=\"Forgot about  deck's title?\" />}\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"text_1\"\r\n            placeholder=\"Deck name\"\r\n            value={formData.text_1}\r\n            onChange={handleChange}\r\n            maxLength={20}\r\n          />\r\n          <label>Description: </label>\r\n          <textarea\r\n            name=\"text_2\"\r\n            placeholder=\"Deck description\"\r\n            rows=\"10\"\r\n            value={formData.text_2}\r\n            onChange={handleChange}\r\n            maxLength={100}\r\n          />\r\n          <div className=\"form-button-group\">\r\n            <CustomButton\r\n              title=\"Cancel\"\r\n              size=\"small\"\r\n              kind=\"danger\"\r\n              purpose=\"cancel\"\r\n              onClickHandler=\"cancelFormHandler\"\r\n              type=\"button\"\r\n            />\r\n            <CustomButton\r\n              title=\"Submit\"\r\n              size=\"small\"\r\n              kind=\"success\"\r\n              type=\"submit\"\r\n              purpose=\"add\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </>\r\n    ),\r\n    card: (\r\n      <>\r\n        {displayAlert && <AlertMessage message=\"Forgot filling one side?\" />}\r\n        <form onSubmit={handleSubmit}>\r\n          <label>Front:</label>\r\n          <textarea\r\n            name=\"text_1\"\r\n            placeholder=\"Back side of card\"\r\n            rows=\"5\"\r\n            value={formData.text_1}\r\n            onChange={handleChange}\r\n          />\r\n          <label>Back: </label>\r\n          <textarea\r\n            name=\"text_2\"\r\n            placeholder=\"Front side of card\"\r\n            rows=\"5\"\r\n            value={formData.text_2}\r\n            onChange={handleChange}\r\n          />\r\n          <div className=\"form-button-group\">\r\n            <CustomButton\r\n              title=\"Cancel\"\r\n              size=\"small\"\r\n              kind=\"danger\"\r\n              purpose=\"cancel\"\r\n              type=\"button\"\r\n              onClickHandler=\"cancelFormHandler\"\r\n            />\r\n            <CustomButton\r\n              title=\"Save\"\r\n              size=\"small\"\r\n              kind=\"success\"\r\n              type=\"submit\"\r\n              purpose=\"add\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-form-container\">\r\n      <h2>{title}</h2>\r\n      {formType[type]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomForm;\r\n","import React from \"react\";\r\nimport \"./BreadCrump.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst BreadCrump = ({ deckId, deckName, cardId, urlTo = \"\" }) => {\r\n  const pathnames = {\r\n    deck: [[deckName, \"Study\"], [`/decks/${deckId}`]],\r\n    create_deck: [[\"Create Deck\"], [`/decks/new`]],\r\n    view_deck: [[deckName], [`/decks/${deckId}`]],\r\n    edit_deck: [[deckName, \"Edit Deck\"], [`/decks/${deckId}`]],\r\n    add_card: [[deckName, \"Add Card\"], [`/decks/${deckId}`]],\r\n    edit_card: [[deckName, `Edit Card`], [`/decks/${deckId}`]],\r\n  };\r\n\r\n  return (\r\n    <section className={`breadcrump-container`}>\r\n      <Link to=\"/\">\r\n        <h3>Home</h3>\r\n      </Link>\r\n      <h3> / </h3>\r\n      {pathnames[urlTo][0].map((title, index) => {\r\n        const urlLink = pathnames[urlTo][1][index];\r\n        const isLast = index === pathnames[urlTo][0].length - 1;\r\n        return isLast ? (\r\n          <div key={index}>\r\n            <h3>\r\n              {title?.length > 10 ? `${title?.substring(0, 10)}...` : title}\r\n            </h3>\r\n          </div>\r\n        ) : (\r\n          <div key={index}>\r\n            <Link to={urlLink}>\r\n              <h3>\r\n                {title?.length > 10 ? `${title?.substring(0, 10)}...` : title}\r\n              </h3>\r\n            </Link>\r\n            <h3> / </h3>\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BreadCrump;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport \"./EditDeck.css\";\r\n\r\nimport CustomForm from \"../../components/CustomRecC/CustomForm/CustomForm\";\r\nimport BreadCrump from \"../../components/BreadCrump/BreadCrump\";\r\n\r\nimport { editDeck, getDeck as readDeck } from \"../../api/api.localStorage\";\r\n\r\nconst EditDeck = () => {\r\n  const { deckId } = useParams();\r\n  const history = useHistory();\r\n  const [deck, setDeck] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getDeck = async () => {\r\n      try {\r\n        const response = await readDeck(deckId);\r\n        console.log(\"thidDe\", response);\r\n        setDeck(response);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  const submitFormHandler = (form) => {\r\n    const deckInfo = {\r\n      id: deckId,\r\n      name: form.text_1,\r\n      description: form.text_2,\r\n    };\r\n    editDeck(deckInfo);\r\n    history.goBack();\r\n  };\r\n  const renderDeckState = {\r\n    render: (\r\n      <>\r\n        <BreadCrump urlTo=\"edit_deck\" deckName={deck.name} deckId={deck.id} />\r\n        <CustomForm\r\n          type=\"deck\"\r\n          title=\"Edit Deck:\"\r\n          input_1={deck.name}\r\n          input_2={deck.description}\r\n          submitFormHandler={submitFormHandler}\r\n        />\r\n      </>\r\n    ),\r\n    loading: <h1>Loading...</h1>,\r\n  };\r\n\r\n  return deck.name ? renderDeckState.render : renderDeckState.loading;\r\n};\r\n\r\nexport default EditDeck;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport \"./StudyDeck.css\";\r\n\r\nimport CustomCard from \"../../components/CustomRecC/CustomCard/CustomCard\";\r\n\r\nimport { getDeck as readDeck } from \"../../api/api.localStorage\";\r\nimport CustomButton from \"../../components/CustomRecC/CustomButton/CustomButton\";\r\nimport BreadCrump from \"../../components/BreadCrump/BreadCrump\";\r\n\r\nconst StudyDeck = () => {\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState({});\r\n  const [allCards, setAllCards] = useState([]);\r\n  const [currentCard, setCurrentCard] = useState({});\r\n  const [currentPosition, setCurrentPosition] = useState(true);\r\n  const [allowNewCard, setAllowNewCard] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getDeck = async () => {\r\n      try {\r\n        const response = await readDeck(deckId);\r\n        setDeck(response);\r\n        setAllCards(response.cards);\r\n        setCurrentCard(response.cards[0]);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  const changeCardPositionHandler = () => {\r\n    setCurrentPosition(!currentPosition);\r\n    setAllowNewCard(true);\r\n  };\r\n\r\n  const nextCardHandler = () => {\r\n    let currentCardIndex = allCards.indexOf(currentCard);\r\n    if (currentCardIndex === allCards.length - 1) {\r\n      if (window.confirm(\"Restart cards?\")) {\r\n        currentCardIndex = -1;\r\n      } else {\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n    setCurrentCard(allCards[currentCardIndex + 1]);\r\n  };\r\n\r\n  const deckDisplay = {\r\n    render: (\r\n      <>\r\n        <BreadCrump urlTo=\"deck\" deckName={deck.name} deckId={deck.id} />\r\n        <h1 className=\"deck-title\">{deck.name}: Study</h1>\r\n        <CustomCard\r\n          id={deckId}\r\n          type=\"study\"\r\n          text_2={currentPosition ? currentCard?.front : currentCard?.back}\r\n          quantity={deck?.cards?.length}\r\n          allowNewCard={allowNewCard}\r\n          currentCard={allCards.indexOf(currentCard) + 1}\r\n          changeCardPositionHandler={changeCardPositionHandler}\r\n          currentPosition={currentPosition}\r\n          nextCardHandler={nextCardHandler}\r\n        />\r\n      </>\r\n    ),\r\n    loading: (\r\n      <>\r\n        <BreadCrump urlTo=\"deck\" deckName={deck.name} deckId={deck.id} />\r\n        <h1 className=\"deck-title\">Loading...</h1>\r\n      </>\r\n    ),\r\n    notEnoughCards: (\r\n      <>\r\n        <BreadCrump urlTo=\"deck\" deckName={deck.name} deckId={deck.id} />\r\n\r\n        <div className=\"add-cards-container\">\r\n          <h1 className=\"deck-title\">{deck.name}: Study</h1>\r\n          <h2>Not enough cards.</h2>\r\n          <p>\r\n            You need at least 3 cards to study. There are {deck?.cards?.length}{\" \"}\r\n            cards in this deck\r\n          </p>\r\n          <CustomButton\r\n            title=\"Add Cards\"\r\n            kind=\"casual\"\r\n            size=\"medium\"\r\n            purpose=\"add\"\r\n            onClickHandler=\"addCardsHandler\"\r\n            id={deckId}\r\n          />\r\n        </div>\r\n      </>\r\n    ),\r\n  };\r\n\r\n  return deck?.cards?.length ? deckDisplay.render : deckDisplay.notEnoughCards;\r\n};\r\n\r\nexport default StudyDeck;\r\n","import React from \"react\";\r\nimport \"./CreateDeck.css\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport CustomForm from \"../../components/CustomRecC/CustomForm/CustomForm\";\r\nimport { createDeck } from \"../../api/api.localStorage\";\r\nimport BreadCrump from \"../../components/BreadCrump/BreadCrump\";\r\n\r\nconst CreateDeck = () => {\r\n  const history = useHistory();\r\n\r\n  const submitFormHandler = (form) => {\r\n    const deckInfo = { name: form.text_1, description: form.text_2 };\r\n    createDeck(deckInfo);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrump urlTo=\"create_deck\" />\r\n      <CustomForm\r\n        type=\"deck\"\r\n        title=\"Create Deck\"\r\n        submitFormHandler={submitFormHandler}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateDeck;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ViewDeck.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport CustomCard from \"../../components/CustomRecC/CustomCard/CustomCard\";\r\nimport { getDeck as retrieveDeck } from \"../../api/api.localStorage\";\r\nimport BreadCrump from \"../../components/BreadCrump/BreadCrump\";\r\n\r\nconst ViewDeck = () => {\r\n  const [deck, setDeck] = useState({});\r\n  const [refresh, setRefresh] = useState(false);\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    let cancel = false;\r\n    const getDeck = async () => {\r\n      try {\r\n        const response = await retrieveDeck(deckId);\r\n\r\n        if (cancel) return;\r\n        setDeck(response);\r\n        setRefresh(false);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getDeck();\r\n    return () => {\r\n      cancel = true;\r\n    };\r\n  }, [refresh, deckId]);\r\n\r\n  const refreshHandler = () => {\r\n    setRefresh(true);\r\n  };\r\n\r\n  const getAllCards = deck?.cards?.map((item) => {\r\n    return (\r\n      <div className=\"card-unit\" key={item.id}>\r\n        <CustomCard\r\n          id={item.id}\r\n          text_1={item.front}\r\n          text_2={item.back}\r\n          type=\"edit\"\r\n          refreshHandler={refreshHandler}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"deck-view\">\r\n      <BreadCrump urlTo=\"view_deck\" deckName={deck.name} deckId={deck.id} />\r\n      <h2>Deck: </h2>\r\n      <CustomCard\r\n        id={deck.id}\r\n        text_1={deck.name}\r\n        text_2={deck.description}\r\n        type=\"deck\"\r\n        quantity={deck?.cards?.length}\r\n        editDeck={true}\r\n      />\r\n\r\n      {deck?.cards?.length ? (\r\n        <h2>Cards: </h2>\r\n      ) : (\r\n        <h2>Add some cards to the deck</h2>\r\n      )}\r\n      <section className=\"study-cards-section\">\r\n        <div className=\"map-study-cards\"> {getAllCards}</div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewDeck;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport CustomForm from \"../../components/CustomRecC/CustomForm/CustomForm\";\r\nimport { getDeck as readDeck, createCard } from \"../../api/api.localStorage\";\r\nimport BreadCrump from \"../../components/BreadCrump/BreadCrump\";\r\n\r\nconst CreateCard = () => {\r\n  const [deck, setDeck] = useState({});\r\n  const { deckId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getDeck = async () => {\r\n      try {\r\n        const response = await readDeck(deckId);\r\n        setDeck(response);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  const submitFormHandler = (form) => {\r\n    createCard(deck.id, { front: form.text_1, back: form.text_2 });\r\n\r\n    deck.id && history.goBack();\r\n  };\r\n\r\n  const renderFormState = {\r\n    render: (\r\n      <>\r\n        <BreadCrump urlTo=\"add_card\" deckName={deck.name} deckId={deck.id} />\r\n        <CustomForm\r\n          type=\"card\"\r\n          title={`${deck.name}: Add Card`}\r\n          submitFormHandler={submitFormHandler}\r\n        />\r\n      </>\r\n    ),\r\n    loading: <h1>Loading...</h1>,\r\n  };\r\n\r\n  return deck.name ? renderFormState.render : renderFormState.loading;\r\n};\r\n\r\nexport default CreateCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport CustomForm from \"../../components/CustomRecC/CustomForm/CustomForm\";\r\nimport {\r\n  getDeck as readDeck,\r\n  editCard,\r\n  getCard as readCard,\r\n} from \"../../api/api.localStorage\";\r\nimport BreadCrump from \"../../components/BreadCrump/BreadCrump\";\r\n\r\nconst EditCard = () => {\r\n  const [deck, setDeck] = useState({});\r\n  const [card, setCard] = useState({});\r\n  const { deckId, cardId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getDeck = async () => {\r\n      try {\r\n        const response = await readDeck(deckId);\r\n        setDeck(response);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getDeck();\r\n  }, [deckId]);\r\n\r\n  useEffect(() => {\r\n    const getCard = async () => {\r\n      try {\r\n        const response = await readCard(cardId);\r\n        setCard(response);\r\n      } catch (err) {\r\n        throw err;\r\n      }\r\n    };\r\n    getCard();\r\n  }, [cardId]);\r\n\r\n  const submitFormHandler = (form) => {\r\n    editCard({\r\n      id: card.id,\r\n      front: form.text_1,\r\n      back: form.text_2,\r\n    });\r\n    history.goBack();\r\n  };\r\n\r\n  const renderFormState = {\r\n    render: (\r\n      <>\r\n        <BreadCrump\r\n          urlTo=\"edit_card\"\r\n          deckName={deck.name}\r\n          deckId={deck.id}\r\n          cardId={card.id}\r\n        />\r\n\r\n        <CustomForm\r\n          title=\"Edit Card:\"\r\n          type=\"card\"\r\n          input_1={card.front}\r\n          input_2={card.back}\r\n          submitFormHandler={submitFormHandler}\r\n        />\r\n      </>\r\n    ),\r\n    loading: <h1>Loading...</h1>,\r\n  };\r\n\r\n  return card.id ? renderFormState.render : renderFormState.loading;\r\n};\r\n\r\nexport default EditCard;\r\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./Layout.css\";\r\n\r\nimport Header from \"../components/Header/Header\";\r\nimport Footer from \"../components/Footer/Footer\";\r\n\r\nimport Home from \"./Home/Home\";\r\nimport EditDeck from \"./EditDeck/EditDeck\";\r\nimport StudyDeck from \"./StudyDeck/StudyDeck\";\r\nimport CreateDeck from \"./CreateDeck/CreateDeck\";\r\nimport ViewDeck from \"./ViewDeck/ViewDeck\";\r\nimport CreateCard from \"./CreateCard/CreateCard\";\r\nimport EditCard from \"./EditCard/EditCard\";\r\nimport NotFound from \"../components/NotFound/NotFound\";\r\n\r\nfunction Layout() {\r\n  return (\r\n    <div className=\"total-layout\">\r\n      <Header />\r\n      <div className=\"main-app-container\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/decks/:deckId/study\">\r\n            <StudyDeck />\r\n          </Route>\r\n          <Route exact path=\"/decks/new\">\r\n            <CreateDeck />\r\n          </Route>\r\n          <Route exact path=\"/decks/:deckId\">\r\n            <ViewDeck />\r\n          </Route>\r\n          <Route exact path=\"/decks/:deckId/edit\">\r\n            <EditDeck />\r\n          </Route>\r\n          <Route exact path=\"/decks/:deckId/cards/new\">\r\n            <CreateCard />\r\n          </Route>\r\n          <Route exact path=\"/decks/:deckId/cards/:cardId/edit\">\r\n            <EditCard />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\nimport \"./App.css\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}